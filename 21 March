q1:
Code:
class Solution {
public:
    int maxDepth(string s) {
        int depth=0;
        int ans=0;
        int n=s.length();
        for(int i=0;i<n;i++){
            if(s[i]=='('){
                depth++;
                ans=max(ans,depth);
            }
            else if(s[i]==')'){
                depth--;
            }
        } 
        return ans;
    }
};

TC:O(N)
SC:O(1)
q2:
Code:
class Solution {
private:
    int readnum(char c){
        if(c=='I') return 1;
        else if(c=='V') return 5;
        else if(c=='X') return 10;
        else if(c=='L') return 50;
        else if(c=='C') return 100;
        else if(c=='D') return 500;
        return 1000;
    }
public:
    int romanToInt(string s) {
        int n=s.length();
        int res=0;
        int ind=-1;
        for(int i=0;i<n-1;i++){
            if(i==ind){ 
                ind=-1;
                continue;
            }
            int num1=readnum(s[i]);
            int num2=readnum(s[i+1]);

            if(num1>=num2) res+=num1;
            else{
                res+=(num2-num1);
                ind=i+1;
            }
        }
        if(ind==-1) res+=readnum(s[n-1]);
        
        return res;
    }
};
TC:O(N)
SC:O(1)
